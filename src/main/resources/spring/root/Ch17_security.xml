<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 인증 절차가 필요없는 경로 설정 -->
	<security:http pattern="/resources/**" security="none"/>
	
	<!-- 인증 절차를 설정 -->
	<security:http>
		<!-- 인증 방식 설정: Form 인증 방식 -->
		<security:form-login
			login-page="/ch17/loginForm"
			username-parameter="mid"
			password-parameter="mpassword"
			login-processing-url="/login"
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler"
		/>
		<!-- 로그아웃 설정 -->
		<!-- 
		<security:logout 
			logout-url="/logout"
			logout-success-url="/ch17/content"
		/>
		
		
		-->
		
		<security:logout 
			logout-url="/logout"
			success-handler-ref="LogoutSuccessHandler"
		/>
		<!-- 사이트간 요청 위조 방지 비활성화 -->
		<!-- logout도 post 방식으로 요청해야 함 (_csrf 토큰을 전달해야 한다) -->
		<security:csrf disabled="false"/>
		
		<!-- 요청 URL 권한 설정 -->
		<security:intercept-url pattern="/ch17/admin*" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/ch17/manager*" access="hasRole('ROLE_MANAGER')"/>
		<!-- 인증된 사람만  -->
		<security:intercept-url pattern="/ch17/user*" access="isAuthenticated()"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		
		<!-- 권한 없음일 경우 보여줄 페이지 설정 -->
		<security:access-denied-handler error-page="/ch17/error403"/>
		
		<!-- 로그인 중복 방지를 위한 설정 -->
		<security:session-management>
			<!-- 
				max-sessions: 최대 로그인 수 
				error-if-maximum-exceeded="true": max-session을 초과했을 경우 에러를 발생시키겠다는 
				이전 로그인을 유효하게 하고 다른 로그인은 에러처리 
				
				expired-url: 인증이 무효화된 사용자가 이동하는 페이지
			 -->
			 <!-- 이전 로그인을 유효하게 만들기 -->
			 <!-- 
			 
			<security:concurrency-control max-sessions="1"
										error-if-maximum-exceeded="true"/>
			 -->
			 
			 <!-- 최종 로그인을 유효하게 만들기 -->
			 
			 <security:concurrency-control max-sessions="1"
										error-if-maximum-exceeded="false"
										expired-url="/ch17/loginForm"/>
		</security:session-management>
	</security:http>
	<!-- 권한 계층 설정 -->
	<bean id="roleHierarchyImpl" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_MANAGER 
				ROLE_MANAGER > ROLE_USER
			</value>
		</property>
	</bean>
		
		
	<bean id="roleHierarchyAuthoritiesMapper" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyAuthoritiesMapper">
		<constructor-arg ref="roleHierarchyImpl"/>
	</bean>


	<!-- 인증 관리자 설정(아이디와 패스워드를 DB와 비교해서 로그인 처리 관리) -->
	<security:authentication-manager>
		<security:authentication-provider ref="daoAuthenticationProvider"/>
	</security:authentication-manager>
	
	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="jdbcUserService"/>
		<property name="authoritiesMapper" ref="roleHierarchyAuthoritiesMapper"/>		
	</bean>
	
	
	<security:jdbc-user-service id="jdbcUserService" 
								data-source-ref="dataSource"
								users-by-username-query="SELECT mid, mpassword, menabled FROM member WHERE mid=?"
								authorities-by-username-query="SELECT mid, mrole FROM member WHERE mid=?"/>
	
	<!-- 인증 성공 또는 실패시 실행되는 핸들러 객체 실향  -->
	
	<!-- 리다이렉트로 이동할 경로를 value값으로 지정한다. -->
	<bean id="authenticationSuccessHandler" class="com.mycompany.webapp.security.Ch17AuthenticationSuccessHandler">
		<property name="alwaysUseDefaultTargetUrl" value="false"></property>
		<property name="defaultTargetUrl" value="/ch16/content"></property>
	</bean>
	<bean id="authenticationFailureHandler" class="com.mycompany.webapp.security.Ch17AuthenticationFailureHandler">
		<property name="defaultFailureUrl" value="/ch17/loginForm"></property>
	</bean>
	
	<bean id="LogoutSuccessHandler" class="com.mycompany.webapp.security.Ch17LogoutSuccessHandler">
		<property name="defaultTargetUrl" value="/ch17/content"></property>
	</bean>
</beans>
